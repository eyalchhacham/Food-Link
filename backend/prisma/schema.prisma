generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  password     String
  email        String         @unique
  name         String
  phoneNumber  String         @map("phone_number")
  locations UserLocation[]
  FoodDonation FoodDonation[]
}

model UserLocation {
  id        String   @id @default(uuid())
  user_id   Int
  latitude  Float?
  longitude Float?
  address   String?
  created_at DateTime @default(now())

  User User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("user_locations")
  @@unique([user_id])
}

model FoodDonation {
  id             Int            @id @default(autoincrement())
  productName    String         @map("product_name")
  description    String
  image_url      String?
  amount         Float
  expirationDate DateTime
  pickupDate     DateTime
  latitude       Float?
  longitude      Float?
  pickupHours    String?        @map("pickup_hours")
  category       Category
  status         DonationStatus @default(available)
  claimed_by     String?
  dietary_notes  String?
  userId         Int            @map("user_id")
  user           User           @relation(fields: [userId], references: [id])

  @@map("food_donations")
}

enum Unit {
  servings
  pounds
  boxes
  items
}

enum Category {
  prepared_meals
  fresh_produce
  canned_goods
  bakery
  dairy
  meat
  other
}

enum DietaryRestriction {
  vegetarian
  vegan
  gluten_free
  nut_free
  dairy_free
  kosher
  halal
  none
}

enum Allergen {
  peanuts
  tree_nuts
  milk
  eggs
  fish
  shellfish
  soy
  wheat
  none
}

enum DonationStatus {
  available
  claimed
  completed
}

enum Temperature {
  frozen
  refrigerated
  room_temperature
}
